# TODO: update property descriptions based on destination counterparts
# (kubernetes, argocd resources)

# TODO: formats for validating kubernetes names (service, deployment, etc.).
# DNS_LABEL, IANA_SVC_NAME

swagger: "2.0"

info:
  description: Kruise deployment wizard
  title: Kruise deployment wizard
  version: 0.0.1

consumes:
- "application/json"

produces:
- "application/json"

paths:

  /validates/application:
    post:
      tags:
      - validations
      operationId: validateApplication
      description: validates the application details
      parameters:
      - name: application
        in: body
        description: the application object
        required: true
        schema:
          type: object
      responses:
        200:
          description: validated
          schema:
            $ref: "#/definitions/validationResponse"
        400:
          $ref: "#/responses/BadRequest"
        default:
          $ref: "#/responses/InternalServerError"

  /apps:
    post:
      tags:
      - apps
      operationId: createApp
      description: Generates a new Kruise application
      parameters:
      - name: application
        in: body
        description: The application to create
        required: true
        schema:
          $ref: "#/definitions/application"
      produces:
      - "text/plain"
      responses:
        201:
          description: created
          schema:
            type: string
        400:
          $ref: "#/responses/BadRequest"
        default:
          $ref: "#/responses/InternalServerError"

  /health:
    get:
      tags:
      - general
      operationId: getHealth
      description: Get the current health of the API
      responses:
        200:
          description: Get current health response
          schema:
            $ref: "#/definitions/healthStatus"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/error"

responses:

  BadRequest:
    description: Bad request
    schema:
      type: string

  InternalServerError:
    description: Internal server error
    schema:
      type: string

definitions:

  application:
    type: object
    properties:
      name:
        type: string
        description: The name of the application
        minLength: 1
        x-nullable: false
      release:
        type: string
        description: The version or release name of the application
        minLength: 1
        x-nullable: false
      tenant:
        type: string
        description: The name of the tenant
        minLength: 1
        x-nullable: false
      environment:
        type: string
        description: The environment to deploy to
        minLength: 1
        x-nullable: false
        # TODO: consider making environments configurable
        default: Dev
        enum:
        - Dev
        - Stage
        - Prod
      region:
        type: string
        description: The region to deploy to
        minLength: 1
        x-nullable: false
        # TODO: consider making regions configurable
        default: STL
        enum:
        - STL
        - KCI
        - BEL
      namespace:
        type: string
        description: The namespace to deploy to
        minLength: 1
        x-nullable: false
      repoURL:
        type: string
        description: The git repo URL
        minLength: 1
        x-nullable: false
        format: uri
      path:
        type: string
        description: The relative path to the manifests in the git repo
        minLength: 1
        x-nullable: false
        format: filepath
        default: "/"
      targetRevision:
        type: string
        description: Defines the commit, tag, or branch in which to sync the application to.
        minLength: 1
        x-nullable: false
        default: HEAD
      services:
        type: array
        items:
          $ref: "#/definitions/service"
      ingress:
        $ref: "#/definitions/ingress"
    required:
    - name
    - release
    - tenant
    - environment
    - region
    - namespace
    - repoURL

  service:
    type: object
    properties:
      name:
        type: string
        description: The name of the service
        minLength: 1
        x-nullable: false
      type:
        type: string
        description: The service type
        x-nullable: false
        # TODO: needs to be configurable
        enum:
        - ClusterIP
        - ExternalName
        - LoadBalancer
      tier:
        type: string
        description: The tier for the service
        x-nullable: true
        # TODO: needs to be configurable
        enum:
        - Frontend
        - API
        - Backend
        - Cache
      ports:
        type: array
        items:
          $ref: "#/definitions/servicePort"
      containers:
        type: array
        items:
          $ref: "#/definitions/container"
    required:
    - name
    - type
    - ports

  servicePort:
    type: object
    properties:
      name:
        type: string
        description: The name of this port within the service
        minLength: 1
        x-nullable: false
      port:
        type: integer
        description: The port that will be exposed by this service
        x-nullable: false
      protocol:
        type: string
        description: The IP protocol for this port. Supports "TCP" and "UDP". Default is TCP
        minLength: 1
        x-nullable: false
        default: TCP
        enum:
        - TCP
        - UDP
      targetPort:
        type: string
        description: Number or name of the port to access on the pods targeted by the service
        minLength: 1
        x-nullable: false
    required:
    - name
    - port

  container:
    type: object
    properties:
      name:
        type: string
        description: The name of this container within the service
        minLength: 1
        x-nullable: false
      image:
        type: string
        description: The docker image name for the container
        minLength: 1
        x-nullable: false
      imageTag:
        type: string
        description: The docker image tag for the container
        minLength: 1
        x-nullable: false
      imagePullPolicy:
        type: string
        description: Image pull policy. One of Always or IfNotPresent.
        minLength: 1
        x-nullable: false
        default: IfNotPresent
        enum:
        - Always
        - IfNotPresent
      command:
        type: string
        description: The command to run for the docker image's entrypoint.
        # minLength: 1
        x-nullable: true

  ingress:
    type: object
    properties:
      name:
        type: string
        description: The name of the ingress
        minLength: 1
        x-nullable: false
      rules:
        type: array
        items:
          $ref: "#/definitions/ingressRule"
    required:
    - name
    - rules

  ingressRule:
    type: object
    properties:
      host:
        type: string
        description: Host is the fully qualified domain name of a network host, as defined by RFC 3986
        minLength: 1
        x-nullable: false
      path:
        type: string
        description: Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request
      serviceName:
        type: string
        description: Specifies the name of the referenced service
        minLength: 1
        x-nullable: false
      servicePort:
        type: string
        description: Specifies the port of the referenced service
        minLength: 1
        x-nullable: false
    required:
    - host
    - serviceName
    - servicePort

  healthStatus:
    type: object
    properties:
      status:
        type: string

  validationResponse:
    type: object
    properties:
      errors:
        type: object
        additionalProperties:
          type: object

  error:
    type: object
    required:
    - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
